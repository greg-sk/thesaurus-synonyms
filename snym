#!/bin/bash

usage() {
  echo "Show synonyms and antonyms of the given word from thesaurus.com"
  echo "Usage:"
  echo "    snym WORD"
  exit 1
}

columnize() {
  f1=$1
  width=$2
  awk '{printf "%-'$width's\n", $0}' $f1
  for i in {1..50}; do
    printf "%-${width}s\n"
  done
}

if [ $# -ne 1 ]; then
  usage
fi

word=$1
mkdir -p $HOME/.snym

# if the word was already processed (in dir cache)
if ! mkdir "$HOME/.snym/$word" > /dev/null 2>&1; then
  cat "$HOME/.snym/$word/final"
  exit 0
fi


cd "$HOME/.snym/$word"
curl -s http://www.thesaurus.com/browse/$word > page.htm

# split multiple tabs, you need to ignore tab00
csplit -f tab page.htm '/synonym-description/' {*} > /dev/null
  
rm tab00
  
for tab in tab??; do
  # split tabs into synonym - antonym sections
  csplit -f $tab $tab '/container-info antonyms/' {*} > /dev/null
done

rm -f syn_*; rm -f ant_*

W1=30
W2=$((W1+1))
W3=$((W2*2))

for tab in tab??; do
  #printf "\nMeaning:\n" > p$tab
  printf "@\n@\n" > p$tab
  grep '<strong class="ttl">' ${tab}00 | sed 's/.*">\(.*\)<.*/\1/g' >> p$tab      # extract meaning/tab title
  echo '-------------------------------' >> p$tab

  printf "@\n%-${W2}s%-${W2}s\n@\n" "Synonyms:" "Antonyms:" >> p$tab
  for i in 3 2 1; do
    grep relevant-$i ${tab}00 | grep -o 'thesaurus\.com\/browse\/\S*' | sed 's/%20/ /g' | sed 's/thesaurus.com\/browse\/\(.*\)"/\1/g' >> syn_$tab
    grep relevant--$i ${tab}01 | grep -o 'thesaurus\.com\/browse\/\S*' | sed 's/%20/ /g' | sed 's/thesaurus.com\/browse\/\(.*\)"/\1/g' >> ant_$tab
  done

  columnize syn_$tab $W1 > col_syn_$tab
  columnize ant_$tab $W1 > col_ant_$tab

  paste -d' ' col_syn_$tab col_ant_$tab >> p$tab
  columnize p$tab $W3 > col_p$tab
done

echo col_ptab* | xargs -n 3 paste -d' ' | sed '/^\s*$/d' > formatted

cat formatted | sed 's/@/ /g' > final

cat final

