#!/bin/sh

# widths
W1=30
W2=$((W1+1))
W3=$((W2*2))
dispcols=$((`tput cols`/W3))

usage() {
  echo "Show synonyms and antonyms of the word from thesaurus.com"
  echo "Usage:"
  echo "    sa <word>  - show synonym and antonym list"
  echo "    sa         - show word origin and example sentences of the last retrieved entry"
  exit 0
}

columnize() {
  f1=$1
  width=$2
  awk '{printf "%-'$width's\n", $0}' $f1
  for i in `seq 50`; do
    printf "%-${width}s\n"
  done
}

urlencode() {
  printf "%s" "$1" | sed 's/ /%20/g' | sed "s/'/%27/g"
}

display_word() {
  echo columnized_tab*_sa | xargs -n $dispcols paste -d' ' | sed '/^\s*$/d' | sed 's/@/ /g' 
}

if [ $# -eq 1 ] && [ "$1" = "-h" ]; then
  usage
fi

if [ $# -eq 0 ]; then
  last=`ls -tr $HOME/.sa | tail -n 1`
  if [ -n "$last" ]; then
    w3m -dump -cols 180 "$HOME/.sa/$last/page.htm" | grep -A 1000 "Word Origin" | grep -B 1000 "EXPAND" | head -n -2 
  fi
  exit 0
fi

word="$*"
mkdir -p $HOME/.sa

# if the word was already processed (in dir cache)
if ! mkdir "$HOME/.sa/$word" > /dev/null 2>&1; then
  cd "$HOME/.sa/$word"
  display_word
  touch "$HOME/.sa/$word"
  exit 0
fi


cd "$HOME/.sa/$word"
curl -L -s http://www.thesaurus.com/browse/`urlencode $word` > page.htm

if [ $? -ne 0 ]; then
  # probably no connection
  rm "$HOME/.sa/$word/page.htm"
  cd
  rmdir "$HOME/.sa/$word"
  echo "Retrieval problem"
  exit 1
fi  


# split multiple tabs, you need to ignore tab00
csplit -s -f tab page.htm '/synonym-description/' {*}
  
rm tab00

[ -e tab01 ] || { echo "Not found"; exit 2; }
  
for tab in tab??; do
  # split tabs into synonym - antonym sections
  csplit -s -f $tab $tab '/container-info antonyms/' {*}
  # ensure that at least 2 chunk files exist - necessary for further processing
  touch ${tab}00
  touch ${tab}01
done

rm -f syn_*; rm -f ant_*

for tab in tab??; do
  #printf "\nMeaning:\n" > p$tab
  printf "@\n@\n" > ${tab}_sa
  head -n 30 ${tab}00 | grep '<strong class="ttl">\w' | sed 's/.*">\(.*\)<.*/\1/g' >> ${tab}_sa      # extract meaning/tab title
  echo '-------------------------------' >> ${tab}_sa

  printf "@\n%-${W2}s%-${W2}s\n@\n" "Synonyms:" "Antonyms:" >> ${tab}_sa
  grep relevant-[123] ${tab}00 | grep -o 'thesaurus\.com\/browse\/\S*' | sed 's/%20/ /g' | sed "s/%27/'/g" | sed 's/thesaurus.com\/browse\/\(.*\)"/\1/g' >> ${tab}_syn
  grep relevant--[123] ${tab}01 | grep -o 'thesaurus\.com\/browse\/\S*' | sed 's/%20/ /g' | sed "s/%27/'/g" | sed 's/thesaurus.com\/browse\/\(.*\)"/\1/g' >> ${tab}_ant

  columnize ${tab}_syn $W1 > ${tab}_syn_col
  columnize ${tab}_ant $W1 > ${tab}_ant_col

  paste -d' ' ${tab}_syn_col ${tab}_ant_col >> ${tab}_sa
  columnize ${tab}_sa $W3 > columnized_${tab}_sa
done

rm tab*

display_word


